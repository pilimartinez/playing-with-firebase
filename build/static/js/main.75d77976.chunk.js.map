{"version":3,"sources":["components/Title.jsx","components/Button.jsx","components/Card.jsx","components/List.jsx","App.js","index.js"],"names":["Title","children","className","Button","icon","onClick","type","role","aria-label","Card","gifUrl","getRandomGifUrl","addFavoriteGif","src","alt","List","favorites","length","map","url","key","href","target","rel","App","useState","setGifUrl","setFavorites","a","fetch","then","data","json","response","fixed_height_downsampled_url","useCallback","includes","ReactDOM","render","document","getElementById"],"mappings":"kPAKeA,EAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,wBAAIC,UAAU,SAASD,ICQxCE,EARA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACb,4BAAQC,KAAK,SAASJ,UAAS,yBAAoBE,GAAQC,QAASA,GAClE,0BAAME,KAAK,MAAMC,aAAYJ,GAC1BA,KCgBQK,EAnBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,gBAAiBC,EAA5B,EAA4BA,eAA5B,OACX,yBAAKV,UAAU,QACXQ,EAOA,yBAAKR,UAAU,gBAAgBW,IAAKH,EAAQI,IAAI,QANhD,uBAAGZ,UAAU,YACX,0BAAMA,UAAU,QAAQK,KAAK,MAAMC,aAAW,OAA9C,iBAQJ,yBAAKN,UAAU,kBACb,kBAAC,EAAD,CAAQE,KAAK,eAAKC,QAASM,IAC3B,kBAAC,EAAD,CAAQP,KAAK,eAAKC,QAASO,OCMlBG,EArBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACX,yBAAKd,UAAU,QACb,qDACsB,IAArBc,EAAUC,OACT,qEAEA,yBAAKf,UAAU,gBACZc,EAAUE,KAAI,SAAAC,GACb,OACE,yBAAKjB,UAAU,YAAYkB,IAAKD,GAC9B,uBAAGE,KAAMF,EAAKG,OAAO,SAASC,IAAI,uBAChC,yBAAKV,IAAKM,EAAKL,IAAI,yBCiCpBU,EAzCH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTf,EADS,KACDgB,EADC,OAEkBD,mBAAS,IAF3B,mBAETT,EAFS,KAEEW,EAFF,KAIVhB,EAAe,uCAAG,sBAAAiB,EAAA,sDACtBC,MACE,kGAECC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACJP,EAAUO,EAASF,KAAKG,iCANN,2CAAH,qDAUftB,EAAiBuB,uBAAY,WAC5BzB,IAIAM,EAAUoB,SAAS1B,IACtBiB,EAAa,GAAD,mBAAKX,GAAL,CAAgBN,QAE7B,CAACM,EAAWN,IAEf,OACE,yBAAKR,UAAU,gBACb,kBAAC,EAAD,kBACY,uCADZ,YAIA,kBAAC,EAAD,CACEQ,OAAQA,EACRC,gBAAiBA,EACjBC,eAAgBA,IAGlB,kBAAC,EAAD,CAAMI,UAAWA,MCpCvBqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.75d77976.chunk.js","sourcesContent":["  \nimport React from \"react\";\n\nconst Title = ({ children }) => <h1 className=\"title\">{children}</h1>;\n\nexport default Title;","  \nimport React from \"react\";\n\nconst Button = ({ icon, onClick }) => (\n  <button type=\"button\" className={`button button--${icon}`} onClick={onClick}>\n    <span role=\"img\" aria-label={icon}>\n      {icon}\n    </span>\n  </button>\n);\n\nexport default Button;","import React from \"react\";\nimport Button from \"./Button\";\n\nconst Card = ({ gifUrl, getRandomGifUrl, addFavoriteGif }) => (\n  <div className=\"card\">\n    {!gifUrl ? (\n      <p className=\"subtitle\">\n        <span className=\"emoji\" role=\"img\" aria-label=\"Cat\">\n          üêà\n        </span>\n      </p>\n    ) : (\n      <img className=\"margin-bottom\" src={gifUrl} alt=\"Cat\" />\n    )}\n\n    <div className=\"button-wrapper\">\n      <Button icon=\"üé≤\" onClick={getRandomGifUrl} />\n      <Button icon=\"‚≠êÔ∏è\" onClick={addFavoriteGif} />\n    </div>\n  </div>\n);\n\nexport default Card;","import React from \"react\";\n\nconst List = ({ favorites }) => (\n  <div className=\"list\">\n    <h2>Mi lista de favoritos</h2>\n    {favorites.length === 0 ? (\n      <p>Aun no has agregado ningun favorito :(</p>\n    ) : (\n      <div className=\"list-wrapper\">\n        {favorites.map(url => {\n          return (\n            <div className=\"list-item\" key={url}>\n              <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src={url} alt=\"Favorite Cat\" />\n              </a>\n            </div>\n          );\n        })}\n      </div>\n    )}\n  </div>\n);\n\nexport default List;","import React, { useState, useCallback } from \"react\";\nimport Title from \"./components/Title\";\nimport Card from \"./components/Card\";\nimport List from \"./components/List\";\n\nconst App = () => {\n  const [gifUrl, setGifUrl] = useState(\"\");\n  const [favorites, setFavorites] = useState([]);\n\n  const getRandomGifUrl = async () => {\n    fetch(\n      \"https://api.giphy.com/v1/gifs/random?api_key=gH7glaXpjdIJUfGdtE2GO5FSQzi09bbY&tag=Cat&rating=G\"\n    )\n      .then(data => data.json())\n      .then(response => {\n        setGifUrl(response.data.fixed_height_downsampled_url);\n      })\n  };\n\n  const addFavoriteGif = useCallback(() => {\n    if (!gifUrl) return;\n\n    // @todo - Print an alert message :)\n\n    if (!favorites.includes(gifUrl)) {\n      setFavorites([...favorites, gifUrl]);\n    }\n  }, [favorites, gifUrl]);\n\n  return (\n    <div className=\"main-wrapper\">\n      <Title>\n        pick your <u>favorite</u> gif cat\n      </Title>\n\n      <Card\n        gifUrl={gifUrl}\n        getRandomGifUrl={getRandomGifUrl}\n        addFavoriteGif={addFavoriteGif}\n      />\n\n      <List favorites={favorites} />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}